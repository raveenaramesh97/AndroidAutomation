package Stepdefinition;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;

import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.remote.MobileCapabilityType;
import io.appium.java_client.service.local.AppiumDriverLocalService;
import io.appium.java_client.service.local.AppiumServiceBuilder;
import io.cucumber.java.en.And;
import io.cucumber.java.en.But;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;

public class BasicTestSteps {
	
	static WebDriver driver;
  @Given("I Launch the Automate Applicaiton")
  public void ILaunchtheAutomateApplicaiton() throws MalformedURLException, InterruptedException
  {
	  	File app= new File("C:/Users/Indium Software/Documents/apk/automation.apk");
		DesiredCapabilities capabilities= new DesiredCapabilities();
		AppiumDriverLocalService service = AppiumDriverLocalService.buildService(new AppiumServiceBuilder().usingAnyFreePort().withArgument(() -> "--allow-insecure","chromedriver_autodownload"));

		capabilities.setCapability(MobileCapabilityType.AUTOMATION_NAME,"UiAutomator2");
		capabilities.setCapability("no",true);
	    capabilities.setCapability("newCommandTimeout", 100000);
	    capabilities.setCapability("noReset", true);
		capabilities.setCapability("deviceName", "Pixel 4 API 30");
		capabilities.setCapability("udid", "emulator-5554");
		capabilities.setCapability("platformVersion", "11.0");
		capabilities.setCapability("platformName", "Android");

		capabilities.setCapability("app", app.getAbsolutePath());
		URL url= new URL("http://localhost:4723/wd/hub");
	    driver= new AndroidDriver(url,capabilities);
	    System.out.println("Application Started Successfully....");
  }

  @When("^you are in When annotation$")
  public void when() throws Throwable {
  }

  @Then("^you are in Then annotation$")
  public void then() throws Throwable {
  }

  @And("^you are in And annotation$")
  public void and() throws Throwable {
  }

  @But("^you are in But annotation$")
  public void but() throws Throwable {
  }

}
